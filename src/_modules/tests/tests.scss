$red: #6D0808;
$green: #004700;

.tests {
	display: grid;
	grid-template-columns: minmax(0,1fr);
	grid-gap: 20px;
}

@mixin isActive {
	background: $green;
	&::after { content: ' = true'; }
}

.test {
	padding: 30px;
	border: 2px solid #000;
	background: $red;
	display: flex;
	align-items: center;
	justify-content: center;
	margin-bottom: 20px;

	h3 {
		margin-bottom: 0;
	}

	&::before, &::after {
		color: #fff;
		white-space: pre;
	}

	&::before {
		font-size: 20px;
		//Use "\A" to create new lines
	}

	&::after {
		content: ' = false';
	}

	// =====
	// WIDTH
	// =====

	&.-max {
		&::before { content: 'mq(max, #{$BP-medium})'; }
		@include mq(max, $BP-medium) {
			@include isActive;
		}
	}
	&.-maxWidth {
		&::before { content: 'mq(max-width, #{$BP-medium})'; }
		@include mq(max-width, $BP-medium) {
			@include isActive;
		}
	}

	&.-maxVar {
		$MQ-maxVar: (max, $BP-medium);
		&::before { content: 'mq($MQ-maxVar)'; }
		@include mq($MQ-maxVar) {
			@include isActive;
		}
	}

	&.-min {
		&::before { content: 'mq(min, #{$BP-medium})'; }
		@include mq(min, $BP-medium) {
			@include isActive;
		}
	}

	&.-minWidth {
		&::before { content: 'mq(min-width, #{$BP-medium})'; }
		@include mq(min-width, $BP-medium) {
			@include isActive;
		}
	}

	&.-minVar {
		$MQ-minVar: (min, $BP-medium);
		&::before { content: 'mq($MQ-minVar)'; }
		@include mq($MQ-minVar) {
			@include isActive;
		}
	}

	&.-inside {
		&::before { content: 'mq(inside, #{$BP-medium}, #{$BP-medium})'; }
		@include mq(inside, $BP-medium, $BP-small) {
			@include isActive;
		}
	}

	&.-insideWidth {
		&::before { content: 'mq(inside-width, #{$BP-small}, #{$BP-medium})'; }
		@include mq(inside-width, $BP-small, $BP-medium) {
			@include isActive;
		}
	}

	&.-insideVar {
		$MQ-insideVar: (inside, $BP-medium, $BP-small);
		&::before { content: 'mq($MQ-insideVar)'; }
		@include mq($MQ-insideVar) {
			@include isActive;
		}
	}

	&.-outside {
		&::before { content: 'mq(outside, #{$BP-medium}, #{$BP-small})'; }
		@include mq(outside, $BP-medium, $BP-small) {
			@include isActive;
		}
	}

	&.-outsideWidth {
		&::before { content: 'mq(outside-width, #{$BP-small}, #{$BP-medium})'; }
		@include mq(outside-width, $BP-small, $BP-medium) {
			@include isActive;
		}
	}

	&.-outsideVar {
		$MQ-outsideVar: (outside, $BP-medium, $BP-small);
		&::before { content: 'mq($MQ-outsideVar)'; }
		@include mq($MQ-outsideVar) {
			@include isActive;
		}
	}

	// ======
	// HEIGHT
	// ======

	&.-maxHeight {
		&::before { content: 'mq(max-height, #{$BP-medium})'; }
		@include mq(max-height, $BP-medium) {
			@include isActive;
		}
	}

	&.-maxHeightVar {
		$MQ-maxHeightVar: (max-height, $BP-medium);
		&::before { content: 'mq($MQ-maxHeightVar)'; }
		@include mq($MQ-maxHeightVar) {
			@include isActive;
		}
	}

	&.-minHeight {
		&::before { content: 'mq(min-height, #{$BP-medium})'; }
		@include mq(min-height, $BP-medium) {
			@include isActive;
		}
	}

	&.-minHeightVar {
		$MQ-minHeightVar: (min-height, $BP-medium);
		&::before { content: 'mq($MQ-minHeightVar)'; }
		@include mq($MQ-minHeightVar) {
			@include isActive;
		}
	}

	&.-insideHeight {
		&::before { content: 'mq(inside-height, #{$BP-small}, #{$BP-medium})'; }
		@include mq(inside-height, $BP-small, $BP-medium) {
			@include isActive;
		}
	}

	&.-insideHeightVar {
		$MQ-insideHeightVar: (inside-height, $BP-small, $BP-medium);
		&::before { content: 'mq($MQ-insideHeightVar)'; }
		@include mq($MQ-insideHeightVar) {
			@include isActive;
		}
	}

	&.-outsideHeight {
		&::before { content: 'mq(outside-height, #{$BP-small}, #{$BP-medium})'; }
		@include mq(outside-height, $BP-small, $BP-medium) {
			@include isActive;
		}
	}

	&.-outsideHeightVar {
		$MQ-outsideHeightVar: (outside-height, $BP-small, $BP-medium);
		&::before { content: 'mq($MQ-outsideHeightVar)'; }
		@include mq($MQ-outsideHeightVar) {
			@include isActive;
		}
	}

	// ======
	// RATIO
	// ======

	&.-ratio {
		&::before { content: 'mq(ratio, "2 / 1")'; }
		@include mq(ratio, "2 / 1") {
			@include isActive;
		}
	}

	&.-ratioVar {
		$MQ-ratioVar: (ratio, "2 / 1");
		&::before { content: 'mq($MQ-ratioVar)'; }
		@include mq($MQ-ratioVar) {
			@include isActive;
		}
	}

	&.-minRatio {
		&::before { content: 'mq(min-ratio, "2 / 1")'; }
		@include mq(min-ratio, "2 / 1") {
			@include isActive;
		}
	}

	&.-minRatioVar {
		$MQ-minRatioVar: (min-ratio, "2 / 1");
		&::before { content: 'mq($MQ-minRatioVar)'; }
		@include mq($MQ-minRatioVar) {
			@include isActive;
		}
	}

	&.-maxRatio {
		&::before { content: 'mq(max-ratio, "2 / 1")'; }
		@include mq(max-ratio, "2 / 1") {
			@include isActive;
		}
	}

	&.-maxRatioVar {
		$MQ-maxRatioVar: (max-ratio, "2 / 1");
		&::before { content: 'mq($MQ-minRatioVar)'; }
		@include mq($MQ-maxRatioVar) {
			@include isActive;
		}
	}

	&.-insideRatio {
		&::before { content: 'mq(inside-ratio, "2 / 1", "1 / 1")'; }
		@include mq(inside-ratio, "2 / 1", "1 / 1") {
			@include isActive;
		}
	}

	&.-insideRatioVar {
		$MQ-insideRatioVar: (inside-ratio, "2 / 1", "1 / 1");
		&::before { content: 'mq($MQ-insideRatioVar)'; }
		@include mq($MQ-insideRatioVar) {
			@include isActive;
		}
	}

	&.-outsideRatio {
		&::before { content: 'mq(outside-ratio, "1 / 1", "2 / 1")'; }
		@include mq(outside-ratio, "1 / 1", "2 / 1") {
			@include isActive;
		}
	}

	&.-outsideRatioVar {
		$MQ-outsideRatioVar: (outside-ratio, "2 / 1", "1 / 1");
		&::before { content: 'mq($MQ-outsideRatioVar)'; }
		@include mq($MQ-outsideRatioVar) {
			@include isActive;
		}
	}

	&.-exactRatioWorkAround1 {
		//equivenlent to (min-ratio, '2 / 1') but without the 1px sour spot
		$MQ-exactRatioWorkAround1: (max-ratio, '2 / 1', 'not');
		&::before { content: 'mq($MQ-exactRatioWorkAround1)'; }
		@include mq($MQ-exactRatioWorkAround1) {
			@include isActive;
		}
	}

	&.-exactRatioWorkAround2 {
		//Exactly the same as above but formatted differently
		$MQ-exactRatioWorkAround2: 'not' plus (max-ratio, '2 / 1');
		&::before { content: 'mq($MQ-exactRatioWorkAround2)'; }
		@include mq($MQ-exactRatioWorkAround2) {
			@include isActive;
		}
	}

	&.-exactRatioWorkAround3 {
		//The same again this time inline
		&::before { content: "mq(max-ratio, '2 / 1', 'not')"; }
		@include mq(max-ratio, '2 / 1', 'not') {
			@include isActive;
		}
	}

	// ======
	// MEDIA
	// ======

	&.-simpleMedia {
		&::before { content: "mq(min, #{$BP-medium}, 'screen')"; }
		@include mq(min, $BP-medium, 'screen') {
			@include isActive;
		}
	}

	&.-notMedia {
		&::before { content: "mq(min, #{$BP-medium}, 'not')"; }
		@include mq(min, $BP-medium, 'not') {
			@include isActive;
		}
	}

	&.-onlyMedia {
		&::before { content: "mq('screen')"; }
		@include mq('screen') {
			@include isActive;
		}
	}


	//- =====
	//- PLUS
	//- =====

	&.-simplePlus {
		$MQ-simplePlus: (min-width, $BP-medium) plus (min-height, 600px);
		&::before { content: "mq($MQ-simplePlus)"; }
		@include mq($MQ-simplePlus) {
			@include isActive;
		}
	}

	&.-inlinePlus {
		$MQ-simplePlus: (min-width, $BP-medium) plus (min-height, 600px);
		&::before { content: "mq((min-width, #{$BP-medium}) plus (min-height, 600px))"; }
		@include mq((min-width, $BP-medium) plus (min-height, 600px)) {
			@include isActive;
		}
	}

	&.-mediaOnlyPlus {
		&::before { content: "mq('screen' plus (min, #{$BP-medium}))"; }
		@include mq('screen' plus (min, $BP-medium)) {
			@include isActive;
		}
	}

	&.-complexPlus {
		$MQ-complexPlus: (inside-width, $BP-small, $BP-medium, 'print') plus (inside-ratio, '2/1', '1/1');
		&::before { content: "mq($MQ-complexPlus)"; }
		@include mq($MQ-complexPlus) {
			@include isActive;
		}
	}

	&.-ignoredMediaType {
		$MQ-ignoredMediaType: (inside-width, $BP-small, $BP-medium) plus (inside-ratio, '2/1', '1/1', 'print');
		&::before { content: "mq($MQ-ignoredMediaType)"; }
		@include mq($MQ-ignoredMediaType) {
			@include isActive;
		}
	}

	&.-multiPlus {
		$MQ-multiPlus: (
			('screen') plus
			(min-width, $BP-medium) plus
			(min-height, 400px) plus
			(inside, $BP-small, $BP-large) plus
			(inside-ratio, '2/1', '1/1')
		);
		&::before { content: "mq($MQ-multiPlus)"; }

		@include mq($MQ-multiPlus) {
					@include isActive;
		}
	}

	//- =====
	//- OR
	//- =====

	&.-simpleOr {
		$MQ-simpleOr: (
			(min-width, $BP-medium),
			(min-height, 800px)
		);
		&::before { content: "mq($MQ-simpleOr)"; }
		@include mq($MQ-simpleOr) {
		}
	}

	&.-complexOr {
		&::before { content: "mq($MQ-complexOr)"; }
		$MQ-complexOr: (
			(inside, $BP-small, $BP-medium, 'screen'),
			(outside-ratio, '2/1', '1/1')
		);
		@include mq($MQ-complexOr) {
			@include isActive;
		}
	}

	&.-multiOr {
		&::before { content: "mq($MQ-multiOr)"; }
		$MQ-multiOr: (
			(min-width, $BP-medium, 'screen'),
			(min-height, 800px),
			(inside, $BP-small, $BP-large),
			(inside-ratio, '2/1', '1/1'),
			('print')
		);
		@include mq($MQ-multiOr) {
			@include isActive;
		}
	}

	&.-orPlusCombo {
		&::before { content: "mq($MQ-orPlusCombo)"; }
		$MQ-orPlusCombo: (
			(min-width, $BP-medium, 'screen') plus (min-height, 800px),
			'screen' plus (inside, $BP-small, $BP-large) plus (inside-ratio, '2/1', '1/1')
		);
		@include mq($MQ-orPlusCombo) {
			@include isActive;
		}
	}

}

.breakpoints {
	padding: 20px;
	border: 2px solid #000;

	&__size {
		@each $name, $value in $breakpoints {
			&.-#{$name} {
				&::before {
					content: 'BP-#{$name}: ';
				}
				&::after {
					content: '#{$value}';
					font-weight: bold;
					font-size: 1.2em;
				}
			}
		}
	}
}